#pragma checksum "C:\Users\Laurean Ray Bahala\Desktop\ongoing-projects\swmc\Views\Dashboard\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1f09bacb7d79cadf20ff7ac560cd112b1c2527c3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_Index), @"mvc.1.0.view", @"/Views/Dashboard/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/Index.cshtml", typeof(AspNetCore.Views_Dashboard_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Laurean Ray Bahala\Desktop\ongoing-projects\swmc\Views\_ViewImports.cshtml"
using swmc;

#line default
#line hidden
#line 2 "C:\Users\Laurean Ray Bahala\Desktop\ongoing-projects\swmc\Views\_ViewImports.cshtml"
using swmc.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1f09bacb7d79cadf20ff7ac560cd112b1c2527c3", @"/Views/Dashboard/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f308635259a84f6581bb78edb9240c2b39b8af4f", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("card-footer text-white clearfix small z-1"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Applicant", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\Laurean Ray Bahala\Desktop\ongoing-projects\swmc\Views\Dashboard\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    Layout = "_DashboardLayout";

#line default
#line hidden
            BeginContext(79, 580, true);
            WriteLiteral(@"

<!-- Icon Cards-->
<div class=""row"">
    <div class=""col-xl-3 col-sm-6 mb-3"">
        <div class=""card text-white bg-primary o-hidden h-100"">
            <div class=""card-body"">
                <div class=""card-body-icon"">
                    <i class=""fas fa-fw fa-users""></i>
                </div>
                <div class=""mr-5"">

                    <h6 style=""font-size: 19px; font-weight: 400"">
                        Applicants: <span id=""totalApplicants""> 30 </span>
                    </h6>

                </div>
            </div>
            ");
            EndContext();
            BeginContext(659, 304, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f09bacb7d79cadf20ff7ac560cd112b1c2527c34994", async() => {
                BeginContext(758, 201, true);
                WriteLiteral("\r\n                <span class=\"float-left\">View Details</span>\r\n                <span class=\"float-right\">\r\n                    <i class=\"fas fa-angle-right\"></i>\r\n                </span>\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(963, 8329, true);
            WriteLiteral(@"
        </div>
    </div>
    <div class=""col-xl-3 col-sm-6 mb-3"">
        <div class=""card text-white bg-warning o-hidden h-100"">
            <div class=""card-body"">
                <div class=""card-body-icon"">
                    <i class=""fas fa-fw fa-user-check""></i>
                </div>
                <div class=""mr-5"">
                    <h6 style=""font-size: 19px; font-weight: 400"">
                        Embarked: <span id=""embarked""> 30 </span>
                    </h6>
                </div>
            </div>
            <a class=""card-footer text-white clearfix small z-1"" href=""#"">
                <span class=""float-left"">View Details</span>
                <span class=""float-right"">
                    <i class=""fas fa-angle-right""></i>
                </span>
            </a>
        </div>
    </div>
    <div class=""col-xl-3 col-sm-6 mb-3"">
        <div class=""card text-white bg-success o-hidden h-100"">
            <div class=""card-body"">
                <div cla");
            WriteLiteral(@"ss=""card-body-icon"">
                    <i class=""fas fa-fw fa-ship""></i>
                </div>
                <div class=""mr-5"">
                     <h6 style=""font-size: 19px; font-weight: 400"">
                        Vessels: <span id=""vessels""> 30 </span>
                    </h6>
                </div>
            </div>
            <a class=""card-footer text-white clearfix small z-1"" href=""#"">
                <span class=""float-left"">View Details</span>
                <span class=""float-right"">
                    <i class=""fas fa-angle-right""></i>
                </span>
            </a>
        </div>
    </div>
    <div class=""col-xl-3 col-sm-6 mb-3"">
        <div class=""card text-white bg-danger o-hidden h-100"">
            <div class=""card-body"">
                <div class=""card-body-icon"">
                    <i class=""fas fa-fw fa-file-signature""></i>
                </div>
                <div class=""mr-5"">
                     <h6 style=""font-size: 19px; font-weigh");
            WriteLiteral(@"t: 400"">
                        Requests: <span id=""requests"">  </span>
                    </h6>
                </div>
            </div>
            <a class=""card-footer text-white clearfix small z-1"" href=""#"">
                <span class=""float-left"">View Details</span>
                <span class=""float-right"">
                    <i class=""fas fa-angle-right""></i>
                </span>
            </a>
        </div>
    </div>
</div>

<div class=""row mt-2 mb-4"">
    <div class=""col-6"">
        <canvas id=""vesselStatus"" width=""400"" height=""200""></canvas>
    </div>
    <div class=""col-6"">
        <canvas id=""applicantStatus"" width=""400"" height=""250""></canvas>
    </div>
</div>


<div class=""row mt-2 mb-4"">
    <div class=""col"">    <canvas id=""applicantRankStatus"" width=""400"" height=""125""></canvas>
</div>
    </div>

<script >
 window.chartColors = {
      red: 'rgb(255, 99, 132)',
      orange: 'rgb(255, 159, 64)',
      yellow: 'rgb(255, 205, 86)',
      green: 'r");
            WriteLiteral(@"gb(75, 192, 192)',
      blue: 'rgb(54, 162, 235)',
      purple: 'rgb(153, 102, 255)',
      grey: 'rgb(201, 203, 207)'
    };
 
var vesselStatusChart = new Chart(document.getElementById(""vesselStatus""), {
      type: 'horizontalBar',
      data: {
      labels: [""Test"", ""Test"", ""Test"", ""Test""],
      datasets: [{
      label: 'Vessel Status',
      data: [12,31,3,21,5],
      backgroundColor: [
          'rgba(255, 99, 132, 0.2)',
          'rgba(54, 162, 235, 0.2)',
          'rgba(255, 206, 86, 0.2)',
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)'
      ],
      borderColor: [
          'rgba(255, 99, 132, 1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)'
      ],
      borderWidth: 1
      }]
      },
      options: {
       title: {
                  display: true,
             ");
            WriteLiteral(@"     text: 'Vessel Status',
                  fontSize: 20,
                  color: 'rgba(255, 255, 255, 0)'
              },
        legend: {
          labels: {
            fontSize: 16
          }
        },  
        scales: {
        xAxes: [{
            ticks: {
                beginAtZero: true,
                fontSize: 16
            }
        }],
        yAxes: [{
            ticks: {
              fontSize: 16
            }
        }]
        }
      }
      });
var applicantStatusChart = new Chart(document.getElementById('applicantStatus'), {
         type: 'line',
         data: {
         labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
         datasets: [{
         label: 'Active',
         data: [1,2,3,4,5,6,1,3,4,5,7,3],
         lineTension: 0,
          backgroundColor: [
                   'rgba(54, 162, 235, 0.2)'
            
               ],
               borderCo");
            WriteLiteral(@"lor: [
               
                   'rgba(54, 162, 235, 1)'
        
               ],
         fill: false,
         borderWidth: 1
         },
         {
         label: 'Inactive',
         data: [2,3,1,5,5,6,2,3,1,4,8,7],
         lineTension: 0,
          backgroundColor: [
                   'rgba(255, 99, 132, 0.2)'
                
               ],
               borderColor: [
                   'rgba(255, 99, 132, 1)'

               ],
         fill: false,
         borderWidth: 1
         },
         ]
         },
         options: {
               title: {
                               display: true,
                               text: 'Applicant Status',
                               fontSize: 20,
                           },
           legend: {
             labels: {
               fontSize: 18
             }
           },  
           scales: {
           xAxes: [{
               ticks: {
                   beginAtZero: true,
                ");
            WriteLiteral(@"   fontSize: 18
               }
           }],
           yAxes: [{
               ticks: {
                 fontSize: 18
               }
           }]
           }
         }
         });
var applicantRankStatusChart = new Chart(document.getElementById('applicantRankStatus'), {
     type: 'line',
     data: {
     labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
     datasets: [{
     label: 'Captain',
     data: [1,3,2,4,1,5,3,5,6,8,9,3],
     lineTension: 0,
     borderColor: window.chartColors.blue,
     backgroundColor: window.chartColors.blue,
     fill: false,
     borderWidth: 1
     },
     {
     label: 'Deck Officer',
     data: [3,1,2,3,5,7,6,3,4,1,2,3],
     lineTension: 0,
     borderColor: window.chartColors.red,
     backgroundColor: window.chartColors.red,
     fill: false,
     borderWidth: 1
     },
     {
     label: 'Engine Officer',
     data: [2,1,3,4,1,5,6,3,7,5,7,3],");
            WriteLiteral(@"
     lineTension: 0,
     borderColor: window.chartColors.orange,
     backgroundColor: window.chartColors.orange,
     fill: false,
     borderWidth: 1
     },
     {
     label: 'Electrical Technical Officer',
     data: [3,2,2,6,5,7,6,3,4,12,2,32],
     lineTension: 0,
     borderColor: window.chartColors.green,
     backgroundColor: window.chartColors.green,
     fill: false,
     borderWidth: 1
     },
     {
     label: 'Cook/Cadet',
     data: [2,3,7,5,10,15,32,31,5,23,10,10],
     lineTension: 0,
     borderColor: window.chartColors.purple,
     backgroundColor: window.chartColors.purple,
     fill: false,
     borderWidth: 1
     }]
     },
     options: {
       legend: {
         labels: {
           fontSize: 18
         }
       },  
       scales: {
       xAxes: [{
           ticks: {
               beginAtZero: true,
               fontSize: 18
           }
       }],
       yAxes: [{
           ticks: {
             fontSize: 18
           }
       ");
            WriteLiteral("}]\r\n       }\r\n     }\r\n     });\r\n    $(\"body\").toggleClass(\"sidebar-toggled\");\r\n        $(\".sidebar\").toggleClass(\"toggled\");\r\n\r\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
